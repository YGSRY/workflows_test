name: Build libssh for ARMv8a Android

on:
  workflow_dispatch:
    inputs:
      ndk-version:
        description: 'Android NDK version to use'
        required: true
        default: '23.0.7599858'  # 设置默认 NDK 版本

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Android SDK and NDK
      run: |
        # 安装 Android SDK 和 NDK
        sudo apt-get update
        sudo apt-get install -y wget unzip
        mkdir -p $HOME/android-sdk
        cd $HOME/android-sdk

        # 下载并解压 Android SDK
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-8512546_latest.zip
        rm commandlinetools-linux-8512546_latest.zip

        # 安装 Android SDK 和 NDK
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk --licenses
        yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/android-sdk "platform-tools" "build-tools;30.0.3" "ndk;${{ github.event.inputs.ndk-version }}"

        # 设置环境变量
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/cmdline-tools/bin:$ANDROID_SDK_ROOT/tools

    - name: Install dependencies
      run: |
        sudo apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          pkg-config \
          git \
          zlib1g-dev \
          libssl-dev

    - name: Download and prepare libssh 0.11.1
      run: |
        # 下载 libssh 0.11.1 源代码
        git clone --branch 0.11.1 --single-branch https://git.libssh.org/projects/libssh.git
        cd libssh
        git checkout v0.11.1

    - name: Build libssh for ARMv8a (Android)
      run: |
        # 设置交叉编译环境，使用 Android NDK
        export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/${{ github.event.inputs.ndk-version }}
        export TOOLCHAIN=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
        export SYSROOT=$TOOLCHAIN/sysroot
        export CC=$TOOLCHAIN/bin/aarch64-linux-android21-clang
        export CXX=$TOOLCHAIN/bin/aarch64-linux-android21-clang++
        export AR=$TOOLCHAIN/bin/llvm-ar
        export AS=$TOOLCHAIN/bin/llvm-as
        export LD=$TOOLCHAIN/bin/ld
        export STRIP=$TOOLCHAIN/bin/llvm-strip
        export CFLAGS="--sysroot=$SYSROOT"
        export CXXFLAGS="--sysroot=$SYSROOT"

        # 编译 libssh
        cd libssh
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
          -DANDROID_ABI=arm64-v8a \
          -DANDROID_NATIVE_API_LEVEL=21 \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=$HOME/libssh-armv8a-android

        # 编译并安装库
        cmake --build . --target install -j$(nproc)

    - name: Upload libssh artifacts
      uses: actions/upload-artifact@v3
      with:
        name: libssh-armv8a-android
        path: $HOME/libssh-armv8a-android
